{"ast":null,"code":"var _jsxFileName = \"/Users/salsabeelsaleh/Desktop/v12/capstone-final/frontend/my-app/src/context/AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from \"react\";\n\n// Create AuthContext\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\n\n// Create a provider component\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [language, setLanguage] = useState(\"en\"); // Default language is English\n  const [userId, setUserId] = useState(null);\n\n  // Function to toggle language\n  const toggleLanguage = () => {\n    setLanguage(prevLanguage => prevLanguage === \"en\" ? \"ar\" : \"en\");\n  };\n\n  // On mount, check if user is in localStorage\n  useEffect(() => {\n    const storedUser = localStorage.getItem(\"user\");\n    if (storedUser) {\n      try {\n        const user = JSON.parse(storedUser);\n        setUserId(user.id);\n      } catch (error) {\n        console.error(\"Error parsing stored user:\", error);\n        // Handle the error, for example, by setting a default user or taking other actions\n      }\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      language,\n      setLanguage,\n      toggleLanguage,\n      userId,\n      setUserId\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"eso1w0WlmwucmQx7anKDbGsXkqs=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","language","setLanguage","userId","setUserId","toggleLanguage","prevLanguage","storedUser","localStorage","getItem","user","JSON","parse","id","error","console","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/salsabeelsaleh/Desktop/v12/capstone-final/frontend/my-app/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\r\n\r\n// Create AuthContext\r\nexport const AuthContext = createContext();\r\n\r\n// Create a provider component\r\nexport const AuthProvider = ({ children }) => {\r\n  const [language, setLanguage] = useState(\"en\"); // Default language is English\r\n  const [userId, setUserId] = useState(null);\r\n\r\n  // Function to toggle language\r\n  const toggleLanguage = () => {\r\n    setLanguage((prevLanguage) => (prevLanguage === \"en\" ? \"ar\" : \"en\"));\r\n  };\r\n\r\n  // On mount, check if user is in localStorage\r\n  useEffect(() => {\r\n    const storedUser = localStorage.getItem(\"user\");\r\n    if (storedUser) {\r\n      try {\r\n        const user = JSON.parse(storedUser);\r\n        setUserId(user.id);\r\n      } catch (error) {\r\n        console.error(\"Error parsing stored user:\", error);\r\n        // Handle the error, for example, by setting a default user or taking other actions\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ language, setLanguage, toggleLanguage, userId, setUserId }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;;AAEjE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;;AAE1C;AACA,OAAO,MAAMM,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAChD,MAAM,CAACU,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;;EAE1C;EACA,MAAMY,cAAc,GAAGA,CAAA,KAAM;IAC3BH,WAAW,CAAEI,YAAY,IAAMA,YAAY,KAAK,IAAI,GAAG,IAAI,GAAG,IAAK,CAAC;EACtE,CAAC;;EAED;EACAZ,SAAS,CAAC,MAAM;IACd,MAAMa,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC/C,IAAIF,UAAU,EAAE;MACd,IAAI;QACF,MAAMG,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACL,UAAU,CAAC;QACnCH,SAAS,CAACM,IAAI,CAACG,EAAE,CAAC;MACpB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;QAClD;MACF;IACF;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBACElB,OAAA,CAACC,WAAW,CAACmB,QAAQ;IAACC,KAAK,EAAE;MAAEhB,QAAQ;MAAEC,WAAW;MAAEG,cAAc;MAAEF,MAAM;MAAEC;IAAU,CAAE;IAAAL,QAAA,EACvFA;EAAQ;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACrB,EAAA,CA5BWF,YAAY;AAAAwB,EAAA,GAAZxB,YAAY;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}