{"ast":null,"code":"var _jsxFileName = \"/Users/salsabeelsaleh/Desktop/v13 cleanup/capstone-final/frontend/my-app/src/components/Avatar.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState, useEffect } from \"react\";\n// For navigation and reading URL params\nimport { useNavigate, useParams } from \"react-router-dom\";\n// Global language context\nimport { AuthContext } from \"../context/AuthContext\";\n// Importing Dicebear avatar generator\nimport * as Avatars from '@dicebear/avataaars';\nimport { createAvatar } from '@dicebear/core';\nimport \"./Avatar.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Avatar() {\n  _s();\n  // Get language state and toggle function from context\n  const {\n    language,\n    toggleLanguage\n  } = useContext(AuthContext);\n\n  // Get user ID from URL path like /avatar/:userId\n  const {\n    userId\n  } = useParams();\n  const navigate = useNavigate();\n\n  // State: list of generated avatars\n  const [avatars, setAvatars] = useState([]);\n  // State: currently selected avatar\n  const [selectedAvatar, setSelectedAvatar] = useState(null);\n\n  // Function to create 6 random avatars\n  const generateAvatars = () => {\n    const newAvatars = [];\n    for (let i = 0; i < 6; i++) {\n      const svg = createAvatar(Avatars, {\n        seed: Math.random().toString(36).substring(7),\n        // Random seed\n        backgroundColor: '#ffffff',\n        width: 200,\n        height: 200\n      });\n      newAvatars.push(svg.toString()); // Convert to raw SVG string\n    }\n    setAvatars(newAvatars);\n  };\n\n  // Generate avatars on component mount\n  useEffect(() => {\n    generateAvatars();\n  }, []);\n\n  // When user clicks an avatar, mark it as selected\n  const handleAvatarSelect = index => {\n    setSelectedAvatar(avatars[index]);\n  };\n\n  // Regenerate avatars if user wants to change options\n  const regenerateAvatars = () => {\n    generateAvatars();\n    setSelectedAvatar(null);\n  };\n\n  // When user clicks continue, send selected avatar to backend and redirect\n  const handleContinue = async () => {\n    try {\n      const response = await fetch(`http://localhost:8000/user/${userId}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          avatar: selectedAvatar.toString()\n        }) // Save as string\n      });\n      if (!response.ok) throw new Error(\"Failed to update avatar\");\n\n      // Go to main page after saving avatar\n      navigate('/main-page');\n    } catch (error) {\n      console.error(\"Avatar update failed\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"avatar-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"login-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"login-title1\",\n        children: language === \"ar\" ? \"عَبِّرْ\" : \"Abber\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"login-language-switch\",\n        onClick: toggleLanguage,\n        children: language === \"ar\" ? \"English\" : \"العربية\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"avatar-title-container\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"avatar-title\",\n        children: language === \"ar\" ? \"😊 هل أنت مستعد لاختيار صورتك الرمزية؟\" : \"Ready to choose your avatar? 😊\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"avatar-instruction\",\n      children: language === \"ar\" ? \" 👇 من فضلك اختر صورتك الرمزية \" : \"Kindly select your avatar 👇\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"avatar-collection-container\",\n      children: avatars.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"avatar-collection\",\n        children: avatars.map((avatar, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `avatar-item ${selectedAvatar === avatar ? 'selected' : ''}`,\n          onClick: () => handleAvatarSelect(index),\n          dangerouslySetInnerHTML: {\n            __html: avatar\n          }\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons-container-horizontal\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"avatar-button-regenerate\",\n        onClick: regenerateAvatars,\n        children: language === \"ar\" ? \"تجديد الصور الرمزية\" : \"Regenerate Avatars\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"continue-button\",\n        onClick: handleContinue,\n        disabled: !selectedAvatar,\n        children: language === \"ar\" ? \"استمرار\" : \"Continue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"avatar-button primary\",\n        onClick: () => navigate(\"/\"),\n        children: language === \"ar\" ? \"العودة إلى الصفحة الرئيسية\" : \"Back to Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"avatar-button secondary\",\n        onClick: () => navigate(\"/create-account\"),\n        children: language === \"ar\" ? \"العودة إلى إنشاء الحساب\" : \"Back to Create Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n}\n_s(Avatar, \"qQMXKybRHvNYp+OWULdlt5wFbFc=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Avatar;\nvar _c;\n$RefreshReg$(_c, \"Avatar\");","map":{"version":3,"names":["React","useContext","useState","useEffect","useNavigate","useParams","AuthContext","Avatars","createAvatar","jsxDEV","_jsxDEV","Avatar","_s","language","toggleLanguage","userId","navigate","avatars","setAvatars","selectedAvatar","setSelectedAvatar","generateAvatars","newAvatars","i","svg","seed","Math","random","toString","substring","backgroundColor","width","height","push","handleAvatarSelect","index","regenerateAvatars","handleContinue","response","fetch","method","headers","body","JSON","stringify","avatar","ok","Error","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","map","dangerouslySetInnerHTML","__html","disabled","_c","$RefreshReg$"],"sources":["/Users/salsabeelsaleh/Desktop/v13 cleanup/capstone-final/frontend/my-app/src/components/Avatar.js"],"sourcesContent":["import React, { useContext, useState, useEffect } from \"react\";\r\n// For navigation and reading URL params\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\n// Global language context\r\nimport { AuthContext } from \"../context/AuthContext\";\r\n// Importing Dicebear avatar generator\r\nimport * as Avatars from '@dicebear/avataaars';\r\nimport { createAvatar } from '@dicebear/core';\r\nimport \"./Avatar.css\";\r\n\r\nexport default function Avatar() {\r\n    // Get language state and toggle function from context\r\n    const { language, toggleLanguage } = useContext(AuthContext);\r\n\r\n    // Get user ID from URL path like /avatar/:userId\r\n    const { userId } = useParams();\r\n    const navigate = useNavigate();\r\n\r\n    // State: list of generated avatars\r\n    const [avatars, setAvatars] = useState([]);\r\n    // State: currently selected avatar\r\n    const [selectedAvatar, setSelectedAvatar] = useState(null);\r\n\r\n    // Function to create 6 random avatars\r\n    const generateAvatars = () => {\r\n        const newAvatars = [];\r\n        for (let i = 0; i < 6; i++) {\r\n            const svg = createAvatar(Avatars, {\r\n                seed: Math.random().toString(36).substring(7), // Random seed\r\n                backgroundColor: '#ffffff',\r\n                width: 200,\r\n                height: 200,\r\n            });\r\n            newAvatars.push(svg.toString()); // Convert to raw SVG string\r\n        }\r\n        setAvatars(newAvatars);\r\n    };\r\n\r\n    // Generate avatars on component mount\r\n    useEffect(() => {\r\n        generateAvatars();\r\n    }, []);\r\n\r\n    // When user clicks an avatar, mark it as selected\r\n    const handleAvatarSelect = (index) => {\r\n        setSelectedAvatar(avatars[index]);\r\n    };\r\n\r\n    // Regenerate avatars if user wants to change options\r\n    const regenerateAvatars = () => {\r\n        generateAvatars();\r\n        setSelectedAvatar(null);\r\n    };\r\n\r\n    // When user clicks continue, send selected avatar to backend and redirect\r\n    const handleContinue = async () => {\r\n        try { \r\n            const response = await fetch(`http://localhost:8000/user/${userId}`, {\r\n                method: \"PUT\",\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify({ avatar: selectedAvatar.toString() }), // Save as string\r\n            });\r\n\r\n            if (!response.ok) throw new Error(\"Failed to update avatar\");\r\n\r\n            // Go to main page after saving avatar\r\n            navigate('/main-page');\r\n        } catch (error) {\r\n            console.error(\"Avatar update failed\", error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"avatar-container\">\r\n            {/* Header with title and language toggle */}\r\n            <header className=\"login-header\">\r\n                <h1 className=\"login-title1\">\r\n                    {language === \"ar\" ? \"عَبِّرْ\" : \"Abber\"}\r\n                </h1>\r\n                <button className=\"login-language-switch\" onClick={toggleLanguage}>\r\n                    {language === \"ar\" ? \"English\" : \"العربية\"}\r\n                </button>\r\n            </header>\r\n\r\n            {/* Instructional header */}\r\n            <div className=\"avatar-title-container\">\r\n                <h1 className=\"avatar-title\">\r\n                    {language === \"ar\"\r\n                        ? \"😊 هل أنت مستعد لاختيار صورتك الرمزية؟\"\r\n                        : \"Ready to choose your avatar? 😊\"}\r\n                </h1>\r\n            </div>\r\n\r\n            {/* Avatar selection instruction */}\r\n            <div className=\"avatar-instruction\">\r\n                {language === \"ar\"\r\n                    ? \" 👇 من فضلك اختر صورتك الرمزية \"\r\n                    : \"Kindly select your avatar 👇\"}\r\n            </div>\r\n\r\n            {/* Display avatar options */}\r\n            <div className=\"avatar-collection-container\">\r\n                {avatars.length > 0 && (\r\n                    <div className=\"avatar-collection\">\r\n                        {avatars.map((avatar, index) => (\r\n                            <div\r\n                                key={index}\r\n                                className={`avatar-item ${selectedAvatar === avatar ? 'selected' : ''}`}\r\n                                onClick={() => handleAvatarSelect(index)}\r\n                                dangerouslySetInnerHTML={{ __html: avatar }}\r\n                            />\r\n                        ))}\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n            {/* Regenerate and Continue buttons */}\r\n            <div className=\"buttons-container-horizontal\">\r\n                <button className=\"avatar-button-regenerate\" onClick={regenerateAvatars}>\r\n                    {language === \"ar\" ? \"تجديد الصور الرمزية\" : \"Regenerate Avatars\"}\r\n                </button>\r\n\r\n                <button\r\n                    className=\"continue-button\"\r\n                    onClick={handleContinue}\r\n                    disabled={!selectedAvatar}\r\n                >\r\n                    {language === \"ar\" ? \"استمرار\" : \"Continue\"}\r\n                </button>\r\n            </div>\r\n\r\n            {/* Navigation buttons */}\r\n            <div className=\"buttons-container\">\r\n                <button className=\"avatar-button primary\" onClick={() => navigate(\"/\")}>\r\n                    {language === \"ar\" ? \"العودة إلى الصفحة الرئيسية\" : \"Back to Home\"}\r\n                </button>\r\n                <button className=\"avatar-button secondary\" onClick={() => navigate(\"/create-account\")}>\r\n                    {language === \"ar\" ? \"العودة إلى إنشاء الحساب\" : \"Back to Create Account\"}\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}